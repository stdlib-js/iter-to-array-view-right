{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isAccessorArray = require( '@stdlib/array-base-assert-is-accessor-array' );\nvar accessorSetter = require( '@stdlib/array-base-accessor-setter' );\nvar setter = require( '@stdlib/array-base-setter' );\nvar dtype = require( '@stdlib/array-dtype' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Fills an array-like object view from right to left with values returned from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} out - output array\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=out.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer (starting index) or a callback function\n* @throws {TypeError} fourth argument must be an integer (ending index) or a callback function\n* @throws {TypeError} fifth argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* var randu = require( '@stdlib/random-iter-randu' );\n* var Float64Array = require( '@stdlib/array-float64' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayviewRight( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\nfunction iterator2arrayviewRight( iterator, out ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar begin;\n\tvar end;\n\tvar fcn;\n\tvar set;\n\tvar dt;\n\tvar i;\n\tvar v;\n\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 2 ) {\n\t\tbegin = 0;\n\t\tend = out.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t}\n\t\tend = out.length;\n\t} else if ( nargs === 4 ) {\n\t\tif ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t\tthisArg = arguments[ 3 ];\n\t\t} else if ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 2 ];\n\t\t\tend = arguments[ 3 ];\n\t\t}\n\t} else if ( nargs === 5 ) {\n\t\tbegin = arguments[ 2 ];\n\t\tif ( isFunction( arguments[ 3 ] ) ) {\n\t\t\tend = out.length;\n\t\t\tfcn = arguments[ 3 ];\n\t\t\tthisArg = arguments[ 4 ];\n\t\t} else {\n\t\t\tend = arguments[ 3 ];\n\t\t\tfcn = arguments[ 4 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t}\n\t} else { // nargs > 5\n\t\tbegin = arguments[ 2 ];\n\t\tend = arguments[ 3 ];\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (starting index) or a function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be either an integer (ending index) or a function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = out.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > out.length ) {\n\t\tend = out.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = out.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\tdt = dtype( out );\n\tif ( isAccessorArray( out ) ) {\n\t\tset = accessorSetter( dt );\n\t} else {\n\t\tset = setter( dt );\n\t}\n\ti = end;\n\tif ( fcn ) {\n\t\twhile ( i > begin ) {\n\t\t\ti -= 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i, end-i-1 ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i > begin ) {\n\t\ti -= 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterator2arrayviewRight;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill an array-like object view from right to left with values returned from an iterator.\n*\n* @module @stdlib/iter-to-array-view-right\n*\n* @example\n* var randu = require( '@stdlib/random-iter-randu' );\n* var Float64Array = require( '@stdlib/array-float64' );\n* var iterator2arrayviewRight = require( '@stdlib/iter-to-array-view-right' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2arrayviewRight( iter, new Float64Array( 20 ), 5 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,4BAA6B,EACnDC,EAAe,QAAS,8BAA+B,EACvDC,EAAiB,QAAS,iCAAkC,EAC5DC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAkB,QAAS,6CAA8C,EACzEC,EAAiB,QAAS,oCAAqC,EAC/DC,EAAS,QAAS,2BAA4B,EAC9CC,EAAQ,QAAS,qBAAsB,EACvCC,EAAS,QAAS,uBAAwB,EAgC9C,SAASC,EAAyBC,EAAUC,EAAM,CACjD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,EACAC,EAEJ,GAAK,CAACjB,EAAgBQ,CAAS,EAC9B,MAAM,IAAI,UAAWF,EAAQ,+FAAgGE,CAAS,CAAE,EAEzI,GAAK,CAACT,EAAcU,CAAI,EACvB,MAAM,IAAI,UAAWH,EAAQ,+EAAgFG,CAAI,CAAE,EAGpH,GADAE,EAAQ,UAAU,OACbA,IAAU,EACdC,EAAQ,EACRC,EAAMJ,EAAI,eACCE,IAAU,EAChBb,EAAY,UAAW,CAAE,CAAE,GAC/Bc,EAAQ,EACRE,EAAM,UAAW,CAAE,GAEnBF,EAAQ,UAAW,CAAE,EAEtBC,EAAMJ,EAAI,eACCE,IAAU,EAChBb,EAAY,UAAW,CAAE,CAAE,GAC/Bc,EAAQ,EACRC,EAAMJ,EAAI,OACVK,EAAM,UAAW,CAAE,EACnBJ,EAAU,UAAW,CAAE,GACZZ,EAAY,UAAW,CAAE,CAAE,GACtCc,EAAQ,UAAW,CAAE,EACrBC,EAAMJ,EAAI,OACVK,EAAM,UAAW,CAAE,IAEnBF,EAAQ,UAAW,CAAE,EACrBC,EAAM,UAAW,CAAE,WAETF,IAAU,GAErB,GADAC,EAAQ,UAAW,CAAE,EAChBd,EAAY,UAAW,CAAE,CAAE,EAC/Be,EAAMJ,EAAI,OACVK,EAAM,UAAW,CAAE,EACnBJ,EAAU,UAAW,CAAE,UAEvBG,EAAM,UAAW,CAAE,EACnBC,EAAM,UAAW,CAAE,EACd,CAAChB,EAAYgB,CAAI,EACrB,MAAM,IAAI,UAAWR,EAAQ,oEAAqEQ,CAAI,CAAE,MAGpG,CAIN,GAHAF,EAAQ,UAAW,CAAE,EACrBC,EAAM,UAAW,CAAE,EACnBC,EAAM,UAAW,CAAE,EACd,CAAChB,EAAYgB,CAAI,EACrB,MAAM,IAAI,UAAWR,EAAQ,oEAAqEQ,CAAI,CAAE,EAEzGJ,EAAU,UAAW,CAAE,CACxB,CACA,GAAK,CAACT,EAAWW,CAAM,EACtB,MAAM,IAAI,UAAWN,EAAQ,0GAA2GM,CAAM,CAAE,EAEjJ,GAAK,CAACX,EAAWY,CAAI,EACpB,MAAM,IAAI,UAAWP,EAAQ,yGAA0GO,CAAI,CAAE,EAuB9I,GArBKA,EAAM,GACVA,EAAMJ,EAAI,OAASI,EACdA,EAAM,IACVA,EAAM,IAEIA,EAAMJ,EAAI,SACrBI,EAAMJ,EAAI,QAENG,EAAQ,IACZA,EAAQH,EAAI,OAASG,EAChBA,EAAQ,IACZA,EAAQ,IAGVI,EAAKX,EAAOI,CAAI,EACXP,EAAiBO,CAAI,EACzBM,EAAMZ,EAAgBa,CAAG,EAEzBD,EAAMX,EAAQY,CAAG,EAElB,EAAIH,EACCC,EAAM,CACV,KAAQ,EAAIF,IACX,GAAK,EACLK,EAAIT,EAAS,KAAK,EACb,CAAAS,EAAE,OAGPF,EAAKN,EAAK,EAAGK,EAAI,KAAMJ,EAASO,EAAE,MAAO,EAAGJ,EAAI,EAAE,CAAE,CAAE,EAEvD,OAAOJ,CACR,CACA,KAAQ,EAAIG,IACX,GAAK,EACLK,EAAIT,EAAS,KAAK,EACb,CAAAS,EAAE,OAGPF,EAAKN,EAAK,EAAGQ,EAAE,KAAM,EAEtB,OAAOR,CACR,CAKAZ,EAAO,QAAUU,IC3IjB,IAAIW,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isFunction", "isCollection", "isIteratorLike", "isInteger", "isAccessorArray", "accessorSetter", "setter", "dtype", "format", "iterator2arrayviewRight", "iterator", "out", "thisArg", "nargs", "begin", "end", "fcn", "set", "dt", "v", "main"]
}
